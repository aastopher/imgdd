name: Publish Python Package

on:
  push:
    tags: "py-v*"
    
jobs:
  integration-tests:
    uses: ./.github/workflows/integration.yml
    with:
      branch: ${{ github.ref_name }}

  publish-docs:
    needs: integration-tests
    name: Release docs page
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install Dependencies
        run: |
          cd crates/python/
          pip install .[dev]
      
      - name: Build and Deploy Documentation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          # Pull the latest gh-pages branch
          git fetch origin gh-pages
          git checkout gh-pages
          git pull origin gh-pages
          # Extract version from the tag (py-v*)
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/^py-v//')
          echo "VERSION extracted: $VERSION"
          # Build and deploy using mike
          cd crates/python/
          mike deploy --push --branch gh-pages "$VERSION" latest
          mike set-default --push --branch gh-pages latest
      
        # run: |
        #   cd crates/python/
        #   # Configure git
        #   git config --global user.name "GitHub Actions"
        #   git config --global user.email "github-actions@users.noreply.github.com"
        #   # Extract version from the tag (py-v*)
        #   VERSION=$(echo "${{ github.ref_name }}" | sed 's/^py-v//')
        #   echo "VERSION extracted: $VERSION"
        #   # Build and deploy using mike
        #   mike deploy --push --branch gh-pages "$VERSION" latest
        #   mike set-default --push --branch gh-pages latest

  # publish:
  #   needs: integration-tests
  #   name: Upload release to PyPI
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: 3.13
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install build
  #         pip install .
  #     - name: Create Distributions
  #       run: |
  #         python -m build --sdist
  #         python -m build --wheel
  #     - name: Publish package distributions to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1