name: Publish Rust Crate

on:
  workflow_dispatch:
    inputs:
      crate:
        description: Select the crate to publish
        type: choice
        options:
          - imgdd
          - imgddcore
        default: imgddcore
      toolchain:
        description: Select the toolchain to build with
        type: choice
        options:
          - stable
          - beta
          - nightly
        default: stable
      dry-run:
        description: Dry run (skip publish)
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ inputs.crate }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  benchmark:
    uses: ./.github/workflows/benchmark.yml
    with:
      branch: ${{ github.ref_name }}
    secrets:
      codspeed_token: ${{ secrets.CODSPEED_TOKEN }}

  coverage:
    uses: ./.github/workflows/coverage.yml
    with:
      branch: ${{ github.ref_name }}
    secrets:
      codecov_token: ${{ secrets.CODECOV_TOKEN }}

  integration-tests:
    uses: ./.github/workflows/integration.yml
    with:
      branch: ${{ github.ref_name }}

  dry-run:
    needs: [benchmark, coverage, integration-tests]
    name: Dry Run
    runs-on: ubuntu-latest
    if: ${{ inputs.dry-run }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ inputs.toolchain }}
          override: true

      - name: Dry Run Cargo Release Publish
        run: |-
          cargo publish \
            --manifest-path crates/${{ inputs.crate }}/Cargo.toml \
            --dry-run
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  publish:
    needs: [benchmark, coverage, integration-tests]
    name: Publish ${{ inputs.crate }} Crate
    runs-on: ubuntu-latest
    if: ${{ !inputs.dry-run }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ inputs.toolchain }}
          override: true

      - name: Check Version
        run: |
          cd crates/${{ inputs.crate }}
          VERSION=$(toml get Cargo.toml package.version)
          test "rs-v$VERSION" = "${{ github.ref_name }}"

      - name: Cargo Release Publish
        run: |-
          cargo publish \
            --manifest-path crates/${{ inputs.crate }}/Cargo.toml
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
